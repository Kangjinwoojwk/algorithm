# -*- coding: utf-8 -*-
# UTF-8 encoding when using korean
k, n = map(int, input().split())
li = [[0] * n for _ in range(n)]
start_point = [(0, 0), (0, n - 1), (n - 1, n - 1), (n - 1, 0)]
dx = [0, 1, 0, -1]
dy = [1, 0, -1, 0]
go = k - 1
x, y = start_point[go]
li[x][y] = 1
for i in range(2, (n ** 2) + 1):
	if 0 <= x + dx[go] < n and 0 <= y + dy[go] < n and li[x + dx[go]][y + dy[go]] == 0:
		x, y = x + dx[go], y + dy[go]
	else:
		go = (go + 1) % 4
		x, y = x + dx[go], y + dy[go]
	li[x][y] = i
for i in range(n):
	for j in range(n):
		li[i][j] = str(li[i][j])
		li[i][j] = (' ' * (5-len(li[i][j]))) + li[i][j]
for i in range(n):
	print(''.join(li[i]))




# [DE-3] 달팽이 출력제출완료
# 10초
#
#
# 자연수 k와 n을 입력받아, 1부터 n2 까지의 수가 달팽이 등껍질 모양(시계 방향)으로 출력되는 프로그램을 작성해주십시오.
#
# 자연수 k는 1부터 4까지의 자연수이며, k에 따라 출발 지점이 변경됩니다.
#
# - k가 1이면, 왼쪽 위에서 출발
#
# - k가 2이면, 오른쪽 위에서 출발
#
# - k가 3이면, 오른쪽 아래에서 출발
#
# - k가 4이면, 왼쪽 아래에서 출발
#
# 예를 들어 k=1, n=5가 입력되었을 때, 1부터 25까지의 수가 5 × 5 형태의 2차원 배열에 달팽이 등껍질 모양으로 정렬되어 다음과 같은 형태로 출력되어야 합니다.
#
#     1    2    3    4    5
#    16   17   18   19    6
#    15   24   25   20    7
#    14   23   22   21    8
#    13   12   11   10    9
#
#
# 만약  k=2, n=5 이면,
#
#    13   14   15   16    1
#    12   23   24   17    2
#    11   22   25   18    3
#    10   21   20   19    4
#     9    8    7    6    5
#
#
# 만약  k=3, n=5 이면,
#
#     9   10   11   12   13
#     8   21   22   23   14
#     7   20   25   24   15
#     6   19   18   17   16
#     5    4    3    2    1
#
#
# 만약  k=4, n=5 이면,
#
#     5    6    7    8    9
#     4   19   20   21   10
#     3   18   25   22   11
#     2   17   24   23   12
#     1   16   15   14   13
#
#
# 입력 설명
#
# 두 정수 k, n (k는 1이상 4 이하의 자연수, n은 15 이하의 자연수)
# 출력 설명
#
# k에 따라 달라지는 출발점에서 1부터 n2 까지의 수를 달팽이 등껍질 모양으로 정렬한 2차원 배열 (n × n) 출력
#
#
# 입/출력 예시
# :
# 공백
# :
# 줄바꿈
# :
# 탭
# 예시 1
# 입력
# 13
# 출력
# 123
# 894
# 765
# 예시 2
# 입력
# 15
# 출력
# 12345
# 161718196
# 152425207
# 142322218
# 131211109
# ⋇ 입출력 형식을 잘 지켜주세요